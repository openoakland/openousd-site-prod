{"version":3,"file":"nivo-sankey.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/SankeyNodeTooltip.tsx","../src/SankeyLinkTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.ts","../src/SankeyNodesItem.tsx","../src/SankeyNodes.tsx","../src/links.ts","../src/SankeyLinkGradient.tsx","../src/SankeyLinksItem.tsx","../src/SankeyLinks.tsx","../src/SankeyLabels.tsx","../src/Sankey.tsx","../src/ResponsiveSankey.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyNodeDatum } from './types'\n\nexport interface SankeyNodeTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n}\n\nexport const SankeyNodeTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n}: SankeyNodeTooltipProps<N, L>) => (\n    <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n)\n","import { BasicTooltip, Chip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nexport interface SankeyLinkTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n}\n\nexport const SankeyLinkTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n}: SankeyLinkTooltipProps<N, L>) => (\n    <BasicTooltip\n        id={\n            <span style={tooltipStyles.container}>\n                <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n                <strong>{link.source.label}</strong>\n                {' > '}\n                <strong>{link.target.label}</strong>\n                <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n                <strong>{link.formattedValue}</strong>\n            </span>\n        }\n    />\n)\n","import { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { SankeyLayerId, SankeyNodeDatum, SankeyAlignType } from './types'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { SankeyNodeTooltip } from './SankeyNodeTooltip'\nimport { SankeyLinkTooltip } from './SankeyLinkTooltip'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping) as SankeyAlignType[]\n\nexport const sankeyAlignmentFromProp = (prop: SankeyAlignType) => sankeyAlignmentPropMapping[prop]\n\nexport const svgDefaultProps = {\n    layout: 'horizontal' as const,\n    align: 'center' as const,\n    sort: 'auto' as const,\n\n    colors: { scheme: 'nivo' as const },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n    nodeBorderRadius: 0,\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply' as const,\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside' as const,\n    labelPadding: 9,\n    labelOrientation: 'horizontal' as const,\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n\n    isInteractive: true,\n    nodeTooltip: SankeyNodeTooltip,\n    linkTooltip: SankeyLinkTooltip,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'] as SankeyLayerId[],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, usePropertyAccessor, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyAlignFunction,\n    SankeyCommonProps,\n    SankeyDataProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySortFunction,\n} from './types'\n\nconst getId = <N extends DefaultNode>(node: N) => node.id\n\nexport const computeNodeAndLinks = <N extends DefaultNode, L extends DefaultLink>({\n    data: _data,\n    formatValue,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLabel,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    formatValue: (value: number) => string\n    layout: SankeyCommonProps<N, L>['layout']\n    alignFunction: SankeyAlignFunction\n    sortFunction: null | undefined | SankeySortFunction<N, L>\n    linkSortMode: null | undefined\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    width: number\n    height: number\n    getColor: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n    getLabel: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        // @ts-ignore: this method signature is incorrect in current @types/d3-sankey\n        .nodeSort(sortFunction)\n        // @ts-ignore: this method is not available in current @types/d3-sankey\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = (cloneDeep(_data) as unknown) as {\n        nodes: SankeyNodeDatum<N, L>[]\n        links: SankeyLinkDatum<N, L>[]\n    }\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        node.formattedValue = formatValue(node.value)\n\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.formattedValue = formatValue(link.value)\n        link.color = link.source.color\n        // @ts-ignore\n        link.pos0 = link.y0\n        // @ts-ignore\n        link.pos1 = link.y1\n        // @ts-ignore\n        link.thickness = link.width\n        // @ts-ignore\n        delete link.y0\n        // @ts-ignore\n        delete link.y1\n        // @ts-ignore\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelTextColor,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    valueFormat?: SankeyCommonProps<N, L>['valueFormat']\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    sort: SankeyCommonProps<N, L>['sort']\n    align: SankeyCommonProps<N, L>['align']\n    colors: SankeyCommonProps<N, L>['colors']\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    nodeBorderColor: SankeyCommonProps<N, L>['nodeBorderColor']\n    label: SankeyCommonProps<N, L>['label']\n    labelTextColor: SankeyCommonProps<N, L>['labelTextColor']\n}) => {\n    const [currentNode, setCurrentNode] = useState<SankeyNodeDatum<N, L> | null>(null)\n    const [currentLink, setCurrentLink] = useState<SankeyLinkDatum<N, L> | null>(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => a.value - b.value\n        }\n        if (sort === 'descending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => b.value - a.value\n        }\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => {\n        if (typeof align === 'function') return align\n        return sankeyAlignmentFromProp(align)\n    }, [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>, string>(\n        label\n    )\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks<N, L>({\n                data,\n                formatValue,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLabel,\n            }),\n        [\n            data,\n            formatValue,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","import { createElement, useCallback } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyNodesItemProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n    x: number\n    y: number\n    width: number\n    height: number\n    color: string\n    opacity: number\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    borderColor: string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrent: (node: SankeyNodeDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodesItem = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    borderRadius,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesItemProps<N, L>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [showTooltipFromEvent, node, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            rx={borderRadius}\n            ry={borderRadius}\n            width={animatedProps.width.to(v => Math.max(v, 0))}\n            height={animatedProps.height.to(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyNodesItem } from './SankeyNodesItem'\n\ninterface SankeyNodesProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    nodeOpacity: SankeyCommonProps<N, L>['nodeOpacity']\n    nodeHoverOpacity: SankeyCommonProps<N, L>['nodeHoverOpacity']\n    nodeHoverOthersOpacity: SankeyCommonProps<N, L>['nodeHoverOthersOpacity']\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    getBorderColor: (node: SankeyNodeDatum<N, L>) => string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrentNode: (node: SankeyNodeDatum<N, L> | null) => void\n    currentNode: SankeyNodeDatum<N, L> | null\n    currentLink: SankeyLinkDatum<N, L> | null\n    isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodes = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    borderWidth,\n    getBorderColor,\n    borderRadius,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesProps<N, L>) => {\n    const getOpacity = (node: SankeyNodeDatum<N, L>) => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return (\n        <>\n            {nodes.map(node => (\n                <SankeyNodesItem<N, L>\n                    key={node.id}\n                    node={node}\n                    x={node.x}\n                    y={node.y}\n                    width={node.width}\n                    height={node.height}\n                    color={node.color}\n                    opacity={getOpacity(node)}\n                    borderWidth={borderWidth}\n                    borderColor={getBorderColor(node)}\n                    borderRadius={borderRadius}\n                    setCurrent={setCurrentNode}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n","import { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nexport const sankeyLinkHorizontal = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.x0 - link.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.source.x1, link.pos0 - halfThickness],\n            [link.source.x1 + padLength, link.pos0 - halfThickness],\n            [link.target.x0 - padLength, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 + halfThickness],\n            [link.target.x0 - padLength, link.pos1 + halfThickness],\n            [link.source.x1 + padLength, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.y0 - link.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.pos0 + halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1 + padLength],\n            [link.pos1 + halfThickness, link.target.y0 - padLength],\n            [link.pos1 + halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0 - padLength],\n            [link.pos0 - halfThickness, link.source.y1 + padLength],\n            [link.pos0 - halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","import { SankeyCommonProps } from './types'\n\ninterface SankeyLinkGradientProps {\n    id: string\n    layout: SankeyCommonProps<any, any>['layout']\n    startColor: string\n    endColor: string\n}\n\nexport const SankeyLinkGradient = ({\n    id,\n    layout,\n    startColor,\n    endColor,\n}: SankeyLinkGradientProps) => {\n    let gradientProps: {\n        x1: string\n        x2: string\n        y1: string\n        y2: string\n    }\n    if (layout === 'horizontal') {\n        gradientProps = {\n            x1: '0%',\n            x2: '100%',\n            y1: '0%',\n            y2: '0%',\n        }\n    } else {\n        gradientProps = {\n            x1: '0%',\n            x2: '0%',\n            y1: '0%',\n            y2: '100%',\n        }\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n}\n","import { createElement, useCallback } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { SankeyLinkGradient } from './SankeyLinkGradient'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyLinkDatum } from './types'\n\ninterface SankeyLinksItemProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n    layout: SankeyCommonProps<N, L>['layout']\n    path: string\n    color: string\n    opacity: number\n    blendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    setCurrent: (link: SankeyLinkDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n}\n\nexport const SankeyLinksItem = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    isInteractive,\n    onClick,\n}: SankeyLinksItemProps<N, L>) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [showTooltipFromEvent, link, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n","import { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyLinksItem } from './SankeyLinksItem'\nimport { useMemo } from 'react'\n\ninterface SankeyLinksProps<N extends DefaultNode, L extends DefaultLink> {\n    layout: SankeyCommonProps<N, L>['layout']\n    links: SankeyLinkDatum<N, L>[]\n    linkOpacity: SankeyCommonProps<N, L>['linkOpacity']\n    linkHoverOpacity: SankeyCommonProps<N, L>['linkHoverOpacity']\n    linkHoverOthersOpacity: SankeyCommonProps<N, L>['linkHoverOthersOpacity']\n    linkContract: SankeyCommonProps<N, L>['linkContract']\n    linkBlendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableLinkGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n    setCurrentLink: (link: SankeyLinkDatum<N, L> | null) => void\n    currentLink: SankeyLinkDatum<N, L> | null\n    currentNode: SankeyNodeDatum<N, L> | null\n    isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n}\n\nexport const SankeyLinks = <N extends DefaultNode, L extends DefaultLink>({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentLink,\n    currentNode,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyLinksProps<N, L>) => {\n    const getOpacity = (link: SankeyLinkDatum<N, L>) => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = useMemo(\n        () => (layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()),\n        [layout]\n    )\n\n    return (\n        <>\n            {links.map(link => (\n                <SankeyLinksItem<N, L>\n                    key={`${link.source.id}.${link.target.id}`}\n                    link={link}\n                    layout={layout}\n                    path={getLinkPath(link, linkContract)}\n                    color={link.color}\n                    opacity={getOpacity(link)}\n                    blendMode={linkBlendMode}\n                    enableGradient={enableLinkGradient}\n                    setCurrent={setCurrentLink}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n","import { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyLabelsProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    labelPosition: SankeyCommonProps<N, L>['labelPosition']\n    labelPadding: SankeyCommonProps<N, L>['labelPadding']\n    labelOrientation: SankeyCommonProps<N, L>['labelOrientation']\n    getLabelTextColor: (node: SankeyNodeDatum<N, L>) => string\n}\n\nexport const SankeyLabels = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}: SankeyLabelsProps<N, L>) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return (\n                    <animated.text\n                        key={label.id}\n                        dominantBaseline=\"central\"\n                        textAnchor={label.textAnchor}\n                        transform={animatedProps.transform}\n                        style={{\n                            ...theme.labels.text,\n                            fill: animatedProps.color,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        {label.label}\n                    </animated.text>\n                )\n            })}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, Container } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { svgDefaultProps } from './props'\nimport { useSankey } from './hooks'\nimport { SankeyNodes } from './SankeyNodes'\nimport { SankeyLinks } from './SankeyLinks'\nimport { SankeyLabels } from './SankeyLabels'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyLayerId,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySvgProps,\n} from './types'\n\ntype InnerSankeyProps<N extends DefaultNode, L extends DefaultLink> = Omit<\n    SankeySvgProps<N, L>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout = svgDefaultProps.layout,\n    sort = svgDefaultProps.sort,\n    align = svgDefaultProps.align,\n    width,\n    height,\n    margin: partialMargin,\n    colors = svgDefaultProps.colors,\n    nodeThickness = svgDefaultProps.nodeThickness,\n    nodeSpacing = svgDefaultProps.nodeThickness,\n    nodeInnerPadding = svgDefaultProps.nodeInnerPadding,\n    nodeBorderColor = svgDefaultProps.nodeBorderColor,\n    nodeOpacity = svgDefaultProps.nodeOpacity,\n    nodeHoverOpacity = svgDefaultProps.nodeHoverOpacity,\n    nodeHoverOthersOpacity = svgDefaultProps.nodeHoverOthersOpacity,\n    nodeBorderWidth = svgDefaultProps.nodeBorderWidth,\n    nodeBorderRadius = svgDefaultProps.nodeBorderRadius,\n    linkOpacity = svgDefaultProps.linkOpacity,\n    linkHoverOpacity = svgDefaultProps.linkHoverOpacity,\n    linkHoverOthersOpacity = svgDefaultProps.linkHoverOthersOpacity,\n    linkContract = svgDefaultProps.linkContract,\n    linkBlendMode = svgDefaultProps.linkBlendMode,\n    enableLinkGradient = svgDefaultProps.enableLinkGradient,\n    enableLabels = svgDefaultProps.enableLabels,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelPadding = svgDefaultProps.labelPadding,\n    labelOrientation = svgDefaultProps.labelOrientation,\n    label = svgDefaultProps.label,\n    labelTextColor = svgDefaultProps.labelTextColor,\n    nodeTooltip = svgDefaultProps.nodeTooltip,\n    linkTooltip = svgDefaultProps.linkTooltip,\n    isInteractive = svgDefaultProps.isInteractive,\n    onClick,\n    legends = svgDefaultProps.legends,\n    layers = svgDefaultProps.layers,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerSankeyProps<N, L>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey<N, L>({\n        data,\n        valueFormat,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelTextColor,\n    })\n\n    let isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean = () => false\n    let isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }: SankeyNodeDatum<N, L>) =>\n            id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }: SankeyLinkDatum<N, L>) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById: Record<SankeyLayerId, ReactNode> = {\n        links: null,\n        nodes: null,\n        labels: null,\n        legends: null,\n    }\n\n    if (layers.includes('links')) {\n        layerById.links = (\n            <SankeyLinks<N, L>\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <SankeyNodes<N, L>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                borderWidth={nodeBorderWidth}\n                borderRadius={nodeBorderRadius}\n                getBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabels) {\n        layerById.labels = (\n            <SankeyLabels<N, L>\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={`legend${i}`}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sankey = <N extends DefaultNode = DefaultNode, L extends DefaultLink = DefaultLink>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: SankeySvgProps<N, L>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerSankey<N, L> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeySvgProps } from './types'\nimport { Sankey } from './Sankey'\n\nexport const ResponsiveSankey = <\n    N extends DefaultNode = DefaultNode,\n    L extends DefaultLink = DefaultLink\n>(\n    props: Omit<SankeySvgProps<N, L>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey<N, L> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","SankeyNodeTooltip","node","_jsx","BasicTooltip","label","color","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","SankeyLinkTooltip","link","_jsxs","Chip","source","target","formattedValue","sankeyAlignmentPropMapping","center","sankeyCenter","justify","sankeyJustify","start","sankeyLeft","end","sankeyRight","sankeyAlignmentPropKeys","Object","keys","sankeyAlignmentFromProp","prop","svgDefaultProps","layout","align","sort","colors","scheme","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","from","modifiers","nodeBorderRadius","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","enableLinkGradient","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","isInteractive","nodeTooltip","linkTooltip","legends","layers","role","animate","motionConfig","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getId","id","computeNodeAndLinks","_data","data","formatValue","alignFunction","sortFunction","linkSortMode","width","height","getColor","getLabel","sankey","d3Sankey","nodeAlign","nodeSort","linkSort","nodeWidth","nodePadding","size","nodeId","nodes","forEach","value","x","x0","y","y0","Math","max","x1","y1","oldX0","oldX1","links","pos0","pos1","thickness","useSankey","valueFormat","useState","currentNode","setCurrentNode","currentLink","setCurrentLink","useMemo","undefined","a","b","theme","useTheme","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","usePropertyAccessor","getLabelTextColor","useValueFormatter","legendData","map","SankeyNodesItem","opacity","borderWidth","borderColor","borderRadius","setCurrent","onClick","tooltip","useMotionConfig","springConfig","config","animatedProps","useSpring","immediate","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","createElement","handleMouseMove","handleMouseLeave","handleClick","animated","to","v","SankeyNodes","getBorderColor","isCurrentNode","getOpacity","sankeyLinkHorizontal","lineGenerator","line","curve","curveMonotoneX","contract","halfThickness","linkLength","padLength","dots","sankeyLinkVertical","curveMonotoneY","SankeyLinkGradient","startColor","endColor","gradientProps","x2","y2","SankeyLinksItem","path","blendMode","enableGradient","linkId","animatedPath","useAnimatedPath","encodeURI","mixBlendMode","SankeyLinks","isCurrentLink","getLinkPath","SankeyLabels","labelRotation","labels","textAnchor","springs","useSprings","length","transform","index","text","fill","pointerEvents","InnerSankey","partialMargin","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentNodeIds","filter","push","includes","layerProps","layerById","Fragment","legend","i","BoxLegendSvg","SvgWrapper","layer","Sankey","renderWrapper","otherProps","Container","ResponsiveSankey","props","ResponsiveWrapper"],"mappings":"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"}