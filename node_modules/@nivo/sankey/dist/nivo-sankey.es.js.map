{"version":3,"file":"nivo-sankey.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/SankeyNodeTooltip.tsx","../src/SankeyLinkTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.ts","../src/SankeyNodesItem.tsx","../src/SankeyNodes.tsx","../src/links.ts","../src/SankeyLinkGradient.tsx","../src/SankeyLinksItem.tsx","../src/SankeyLinks.tsx","../src/SankeyLabels.tsx","../src/Sankey.tsx","../src/ResponsiveSankey.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyNodeDatum } from './types'\n\nexport interface SankeyNodeTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n}\n\nexport const SankeyNodeTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n}: SankeyNodeTooltipProps<N, L>) => (\n    <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n)\n","import { BasicTooltip, Chip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nexport interface SankeyLinkTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n}\n\nexport const SankeyLinkTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n}: SankeyLinkTooltipProps<N, L>) => (\n    <BasicTooltip\n        id={\n            <span style={tooltipStyles.container}>\n                <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n                <strong>{link.source.label}</strong>\n                {' > '}\n                <strong>{link.target.label}</strong>\n                <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n                <strong>{link.formattedValue}</strong>\n            </span>\n        }\n    />\n)\n","import { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { SankeyLayerId, SankeyNodeDatum, SankeyAlignType } from './types'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { SankeyNodeTooltip } from './SankeyNodeTooltip'\nimport { SankeyLinkTooltip } from './SankeyLinkTooltip'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping) as SankeyAlignType[]\n\nexport const sankeyAlignmentFromProp = (prop: SankeyAlignType) => sankeyAlignmentPropMapping[prop]\n\nexport const svgDefaultProps = {\n    layout: 'horizontal' as const,\n    align: 'center' as const,\n    sort: 'auto' as const,\n\n    colors: { scheme: 'nivo' as const },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n    nodeBorderRadius: 0,\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply' as const,\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside' as const,\n    labelPadding: 9,\n    labelOrientation: 'horizontal' as const,\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n\n    isInteractive: true,\n    nodeTooltip: SankeyNodeTooltip,\n    linkTooltip: SankeyLinkTooltip,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'] as SankeyLayerId[],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, usePropertyAccessor, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyAlignFunction,\n    SankeyCommonProps,\n    SankeyDataProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySortFunction,\n} from './types'\n\nconst getId = <N extends DefaultNode>(node: N) => node.id\n\nexport const computeNodeAndLinks = <N extends DefaultNode, L extends DefaultLink>({\n    data: _data,\n    formatValue,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLabel,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    formatValue: (value: number) => string\n    layout: SankeyCommonProps<N, L>['layout']\n    alignFunction: SankeyAlignFunction\n    sortFunction: null | undefined | SankeySortFunction<N, L>\n    linkSortMode: null | undefined\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    width: number\n    height: number\n    getColor: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n    getLabel: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        // @ts-ignore: this method signature is incorrect in current @types/d3-sankey\n        .nodeSort(sortFunction)\n        // @ts-ignore: this method is not available in current @types/d3-sankey\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = (cloneDeep(_data) as unknown) as {\n        nodes: SankeyNodeDatum<N, L>[]\n        links: SankeyLinkDatum<N, L>[]\n    }\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        node.formattedValue = formatValue(node.value)\n\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.formattedValue = formatValue(link.value)\n        link.color = link.source.color\n        // @ts-ignore\n        link.pos0 = link.y0\n        // @ts-ignore\n        link.pos1 = link.y1\n        // @ts-ignore\n        link.thickness = link.width\n        // @ts-ignore\n        delete link.y0\n        // @ts-ignore\n        delete link.y1\n        // @ts-ignore\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelTextColor,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    valueFormat?: SankeyCommonProps<N, L>['valueFormat']\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    sort: SankeyCommonProps<N, L>['sort']\n    align: SankeyCommonProps<N, L>['align']\n    colors: SankeyCommonProps<N, L>['colors']\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    nodeBorderColor: SankeyCommonProps<N, L>['nodeBorderColor']\n    label: SankeyCommonProps<N, L>['label']\n    labelTextColor: SankeyCommonProps<N, L>['labelTextColor']\n}) => {\n    const [currentNode, setCurrentNode] = useState<SankeyNodeDatum<N, L> | null>(null)\n    const [currentLink, setCurrentLink] = useState<SankeyLinkDatum<N, L> | null>(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => a.value - b.value\n        }\n        if (sort === 'descending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => b.value - a.value\n        }\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => {\n        if (typeof align === 'function') return align\n        return sankeyAlignmentFromProp(align)\n    }, [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>, string>(\n        label\n    )\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks<N, L>({\n                data,\n                formatValue,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLabel,\n            }),\n        [\n            data,\n            formatValue,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","import { createElement, useCallback } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyNodesItemProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n    x: number\n    y: number\n    width: number\n    height: number\n    color: string\n    opacity: number\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    borderColor: string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrent: (node: SankeyNodeDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodesItem = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    borderRadius,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesItemProps<N, L>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [showTooltipFromEvent, node, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            rx={borderRadius}\n            ry={borderRadius}\n            width={animatedProps.width.to(v => Math.max(v, 0))}\n            height={animatedProps.height.to(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyNodesItem } from './SankeyNodesItem'\n\ninterface SankeyNodesProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    nodeOpacity: SankeyCommonProps<N, L>['nodeOpacity']\n    nodeHoverOpacity: SankeyCommonProps<N, L>['nodeHoverOpacity']\n    nodeHoverOthersOpacity: SankeyCommonProps<N, L>['nodeHoverOthersOpacity']\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    getBorderColor: (node: SankeyNodeDatum<N, L>) => string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrentNode: (node: SankeyNodeDatum<N, L> | null) => void\n    currentNode: SankeyNodeDatum<N, L> | null\n    currentLink: SankeyLinkDatum<N, L> | null\n    isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodes = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    borderWidth,\n    getBorderColor,\n    borderRadius,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesProps<N, L>) => {\n    const getOpacity = (node: SankeyNodeDatum<N, L>) => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return (\n        <>\n            {nodes.map(node => (\n                <SankeyNodesItem<N, L>\n                    key={node.id}\n                    node={node}\n                    x={node.x}\n                    y={node.y}\n                    width={node.width}\n                    height={node.height}\n                    color={node.color}\n                    opacity={getOpacity(node)}\n                    borderWidth={borderWidth}\n                    borderColor={getBorderColor(node)}\n                    borderRadius={borderRadius}\n                    setCurrent={setCurrentNode}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n","import { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nexport const sankeyLinkHorizontal = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.x0 - link.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.source.x1, link.pos0 - halfThickness],\n            [link.source.x1 + padLength, link.pos0 - halfThickness],\n            [link.target.x0 - padLength, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 + halfThickness],\n            [link.target.x0 - padLength, link.pos1 + halfThickness],\n            [link.source.x1 + padLength, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.y0 - link.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.pos0 + halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1 + padLength],\n            [link.pos1 + halfThickness, link.target.y0 - padLength],\n            [link.pos1 + halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0 - padLength],\n            [link.pos0 - halfThickness, link.source.y1 + padLength],\n            [link.pos0 - halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","import { SankeyCommonProps } from './types'\n\ninterface SankeyLinkGradientProps {\n    id: string\n    layout: SankeyCommonProps<any, any>['layout']\n    startColor: string\n    endColor: string\n}\n\nexport const SankeyLinkGradient = ({\n    id,\n    layout,\n    startColor,\n    endColor,\n}: SankeyLinkGradientProps) => {\n    let gradientProps: {\n        x1: string\n        x2: string\n        y1: string\n        y2: string\n    }\n    if (layout === 'horizontal') {\n        gradientProps = {\n            x1: '0%',\n            x2: '100%',\n            y1: '0%',\n            y2: '0%',\n        }\n    } else {\n        gradientProps = {\n            x1: '0%',\n            x2: '0%',\n            y1: '0%',\n            y2: '100%',\n        }\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n}\n","import { createElement, useCallback } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { SankeyLinkGradient } from './SankeyLinkGradient'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyLinkDatum } from './types'\n\ninterface SankeyLinksItemProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n    layout: SankeyCommonProps<N, L>['layout']\n    path: string\n    color: string\n    opacity: number\n    blendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    setCurrent: (link: SankeyLinkDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n}\n\nexport const SankeyLinksItem = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    isInteractive,\n    onClick,\n}: SankeyLinksItemProps<N, L>) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [showTooltipFromEvent, link, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n","import { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyLinksItem } from './SankeyLinksItem'\nimport { useMemo } from 'react'\n\ninterface SankeyLinksProps<N extends DefaultNode, L extends DefaultLink> {\n    layout: SankeyCommonProps<N, L>['layout']\n    links: SankeyLinkDatum<N, L>[]\n    linkOpacity: SankeyCommonProps<N, L>['linkOpacity']\n    linkHoverOpacity: SankeyCommonProps<N, L>['linkHoverOpacity']\n    linkHoverOthersOpacity: SankeyCommonProps<N, L>['linkHoverOthersOpacity']\n    linkContract: SankeyCommonProps<N, L>['linkContract']\n    linkBlendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableLinkGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n    setCurrentLink: (link: SankeyLinkDatum<N, L> | null) => void\n    currentLink: SankeyLinkDatum<N, L> | null\n    currentNode: SankeyNodeDatum<N, L> | null\n    isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n}\n\nexport const SankeyLinks = <N extends DefaultNode, L extends DefaultLink>({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentLink,\n    currentNode,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyLinksProps<N, L>) => {\n    const getOpacity = (link: SankeyLinkDatum<N, L>) => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = useMemo(\n        () => (layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()),\n        [layout]\n    )\n\n    return (\n        <>\n            {links.map(link => (\n                <SankeyLinksItem<N, L>\n                    key={`${link.source.id}.${link.target.id}`}\n                    link={link}\n                    layout={layout}\n                    path={getLinkPath(link, linkContract)}\n                    color={link.color}\n                    opacity={getOpacity(link)}\n                    blendMode={linkBlendMode}\n                    enableGradient={enableLinkGradient}\n                    setCurrent={setCurrentLink}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n","import { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyLabelsProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    labelPosition: SankeyCommonProps<N, L>['labelPosition']\n    labelPadding: SankeyCommonProps<N, L>['labelPadding']\n    labelOrientation: SankeyCommonProps<N, L>['labelOrientation']\n    getLabelTextColor: (node: SankeyNodeDatum<N, L>) => string\n}\n\nexport const SankeyLabels = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}: SankeyLabelsProps<N, L>) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return (\n                    <animated.text\n                        key={label.id}\n                        dominantBaseline=\"central\"\n                        textAnchor={label.textAnchor}\n                        transform={animatedProps.transform}\n                        style={{\n                            ...theme.labels.text,\n                            fill: animatedProps.color,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        {label.label}\n                    </animated.text>\n                )\n            })}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, Container } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { svgDefaultProps } from './props'\nimport { useSankey } from './hooks'\nimport { SankeyNodes } from './SankeyNodes'\nimport { SankeyLinks } from './SankeyLinks'\nimport { SankeyLabels } from './SankeyLabels'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyLayerId,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySvgProps,\n} from './types'\n\ntype InnerSankeyProps<N extends DefaultNode, L extends DefaultLink> = Omit<\n    SankeySvgProps<N, L>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout = svgDefaultProps.layout,\n    sort = svgDefaultProps.sort,\n    align = svgDefaultProps.align,\n    width,\n    height,\n    margin: partialMargin,\n    colors = svgDefaultProps.colors,\n    nodeThickness = svgDefaultProps.nodeThickness,\n    nodeSpacing = svgDefaultProps.nodeThickness,\n    nodeInnerPadding = svgDefaultProps.nodeInnerPadding,\n    nodeBorderColor = svgDefaultProps.nodeBorderColor,\n    nodeOpacity = svgDefaultProps.nodeOpacity,\n    nodeHoverOpacity = svgDefaultProps.nodeHoverOpacity,\n    nodeHoverOthersOpacity = svgDefaultProps.nodeHoverOthersOpacity,\n    nodeBorderWidth = svgDefaultProps.nodeBorderWidth,\n    nodeBorderRadius = svgDefaultProps.nodeBorderRadius,\n    linkOpacity = svgDefaultProps.linkOpacity,\n    linkHoverOpacity = svgDefaultProps.linkHoverOpacity,\n    linkHoverOthersOpacity = svgDefaultProps.linkHoverOthersOpacity,\n    linkContract = svgDefaultProps.linkContract,\n    linkBlendMode = svgDefaultProps.linkBlendMode,\n    enableLinkGradient = svgDefaultProps.enableLinkGradient,\n    enableLabels = svgDefaultProps.enableLabels,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelPadding = svgDefaultProps.labelPadding,\n    labelOrientation = svgDefaultProps.labelOrientation,\n    label = svgDefaultProps.label,\n    labelTextColor = svgDefaultProps.labelTextColor,\n    nodeTooltip = svgDefaultProps.nodeTooltip,\n    linkTooltip = svgDefaultProps.linkTooltip,\n    isInteractive = svgDefaultProps.isInteractive,\n    onClick,\n    legends = svgDefaultProps.legends,\n    layers = svgDefaultProps.layers,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerSankeyProps<N, L>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey<N, L>({\n        data,\n        valueFormat,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelTextColor,\n    })\n\n    let isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean = () => false\n    let isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }: SankeyNodeDatum<N, L>) =>\n            id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }: SankeyLinkDatum<N, L>) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById: Record<SankeyLayerId, ReactNode> = {\n        links: null,\n        nodes: null,\n        labels: null,\n        legends: null,\n    }\n\n    if (layers.includes('links')) {\n        layerById.links = (\n            <SankeyLinks<N, L>\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <SankeyNodes<N, L>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                borderWidth={nodeBorderWidth}\n                borderRadius={nodeBorderRadius}\n                getBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabels) {\n        layerById.labels = (\n            <SankeyLabels<N, L>\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={`legend${i}`}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sankey = <N extends DefaultNode = DefaultNode, L extends DefaultLink = DefaultLink>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: SankeySvgProps<N, L>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerSankey<N, L> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeySvgProps } from './types'\nimport { Sankey } from './Sankey'\n\nexport const ResponsiveSankey = <\n    N extends DefaultNode = DefaultNode,\n    L extends DefaultLink = DefaultLink\n>(\n    props: Omit<SankeySvgProps<N, L>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey<N, L> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","SankeyNodeTooltip","node","_jsx","label","color","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","SankeyLinkTooltip","link","_jsxs","source","target","formattedValue","sankeyAlignmentPropMapping","center","sankeyCenter","justify","sankeyJustify","start","sankeyLeft","end","sankeyRight","sankeyAlignmentPropKeys","Object","keys","sankeyAlignmentFromProp","prop","svgDefaultProps","layout","align","sort","colors","scheme","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","from","modifiers","nodeBorderRadius","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","enableLinkGradient","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","isInteractive","nodeTooltip","linkTooltip","legends","layers","role","animate","motionConfig","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getId","id","computeNodeAndLinks","_data","data","formatValue","alignFunction","sortFunction","linkSortMode","width","height","getColor","getLabel","sankey","d3Sankey","nodeAlign","nodeSort","linkSort","nodeWidth","nodePadding","size","nodeId","nodes","forEach","value","x","x0","y","y0","Math","max","x1","y1","oldX0","oldX1","links","pos0","pos1","thickness","useSankey","valueFormat","useState","currentNode","setCurrentNode","currentLink","setCurrentLink","useMemo","undefined","a","b","theme","useTheme","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","usePropertyAccessor","getLabelTextColor","useValueFormatter","legendData","map","SankeyNodesItem","opacity","borderWidth","borderColor","borderRadius","setCurrent","onClick","tooltip","useMotionConfig","springConfig","config","animatedProps","useSpring","immediate","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","createElement","handleMouseMove","handleMouseLeave","handleClick","to","v","SankeyNodes","getBorderColor","isCurrentNode","getOpacity","sankeyLinkHorizontal","lineGenerator","line","curve","curveMonotoneX","contract","halfThickness","linkLength","padLength","dots","sankeyLinkVertical","curveMonotoneY","SankeyLinkGradient","startColor","endColor","gradientProps","x2","y2","SankeyLinksItem","path","blendMode","enableGradient","linkId","animatedPath","useAnimatedPath","encodeURI","mixBlendMode","SankeyLinks","isCurrentLink","getLinkPath","SankeyLabels","labelRotation","labels","textAnchor","springs","useSprings","length","transform","index","text","fill","pointerEvents","InnerSankey","partialMargin","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentNodeIds","filter","push","includes","layerProps","layerById","Fragment","legend","i","layer","Sankey","renderWrapper","otherProps","ResponsiveSankey","props"],"mappings":"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"}